//
//  CMPMapParserTests.m
//  Compass
//
//  Created by Grant Butler on 12/5/14.
//  Copyright (c) 2014 Grant Butler. All rights reserved.
//

@import UIKit;
@import XCTest;

#import "CMPMap.h"
#import "CMPMapParser.h"

@interface CMPMapParserTests : XCTestCase

@end

@implementation CMPMapParserTests

- (void)setUp {
    [super setUp];
    // Put setup code here. This method is called before the invocation of each test method in the class.
}

- (void)tearDown {
    // Put teardown code here. This method is called after the invocation of each test method in the class.
    [super tearDown];
}

- (void)testValidV1MapParsing {
    char valid_map[] = {
        0x56, 0x01, 0x3B, 0x57, 0x0A, 0x3B, 0x48, 0x0A, 0x3B, 0x4C, 0x01, 0x3B, 0x54, 0x72, 0x65, 0x73, 0x2F, 0x74, 0x69, 0x6C, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x2F, 0x6F, 0x76, 0x65, 0x72, 0x77, 0x6F, 0x72, 0x6C, 0x64, 0x2E, 0x79, 0x61, 0x6D, 0x6C, 0x3B, 0x6C, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x3B
    };
    
    NSURL *temporaryDirectoryURL = [NSURL fileURLWithPath:NSTemporaryDirectory() isDirectory:YES];
    NSURL *temporaryMapFileURL = [temporaryDirectoryURL URLByAppendingPathComponent:@"temp.map"];
    
    CMPMap *map = [[CMPMap alloc] initWithFileURL:temporaryMapFileURL];
    CMPMapParser *mapParser = [[CMPMapParser alloc] initWithData:[NSData dataWithBytes:valid_map length:sizeof(valid_map)]];
    
    NSError *parseError;
    BOOL result = [mapParser parseIntoMap:map error:&parseError];
    
    XCTAssertTrue(result);
    XCTAssertNil(parseError);
}

@end
